var t;

t = t || {};

$(document).ready(function() {
  t.char_counter();
  t.mentions();
  t.xhr();
  t.timeline_poller();
  t.bind_subscribe_buttons();
  t.bind_retransmit();
  return t.bind_delete();
});
t.bind_delete = function() {
  var $modal_submit, $modal_window, submit_text;
  $modal_window = $('#modal-window');
  $modal_submit = $('#submit');
  submit_text = 'Delete';
  $('.timeline, .telegram').on('click', '.delete', function(ev) {
    var telegram;
    $modal_window.find('h3').text('Delete this telegram?');
    $modal_submit.text(submit_text);
    $modal_submit.attr('data-action', 'delete');
    telegram = $(ev.target).parents('li').html();
    $('.modal-body', $modal_window).html(telegram);
    return $modal_window.modal();
  });
  return $modal_submit.on('click', function() {
    var created_at, ipv6;
    if ($modal_submit.data('action') === 'delete') {
      ipv6 = $('.modal-body .ipv6').text();
      created_at = $('.modal-body .created_at').data('created_at');
      $modal_submit.text('Working...').attr('disabled', 'disabled');
      return $.post('/xhr/delete', {
        'ipv6': ipv6,
        'created_at': created_at
      }, function(data) {
        if (data.result === 'success') {
          $modal_window.modal('hide');
        } else {
          console.error('failed.');
          $modal_window.modal('hide');
        }
        return $modal_submit.text(original_text).attr('disabled', false);
      });
    }
  });
};
t.mentions_userlist = false;

t.mentions = function() {
  var $telegram;
  $telegram = $('#telegram');
  return $telegram.on('focus', function() {
    if (!t.mentions_userlist) {
      return $.get("/api/v1/get_subscription.json?type=subscriptions", function(data) {
        t.mentions_userlist = data.user_list;
        $telegram.atwho({
          at: "@",
          data: t.mentions_userlist,
          displayTpl: "<li>${name} <small>${ipv6}</small>"
        });
        return $telegram.on('keyup', function() {
          return t.mentions_checkhidden();
        });
      });
    }
  });
};

t.mentions_checkhidden = function(value) {
  console.info('ch');
  if (!$('input[name=mentions]').length) {
    $('#telegram').after('<input type="text" name="mentions" />');
  }
  return $('input[name=mentions]').val(value);
};
t.bind_retransmit = function() {
  var $modal_submit, $modal_window, submit_text;
  $modal_window = $('#modal-window');
  $modal_submit = $('#submit');
  submit_text = 'Retransmit';
  $('.timeline, .telegram').on('click', '.retransmit', function(ev) {
    var telegram;
    $modal_window.find('h3').text('Retransmit this to your subscribers?');
    $modal_submit.text(submit_text);
    $modal_submit.attr('data-action', 'retransmit');
    telegram = $(ev.target).parents('li').html();
    $('.modal-body', $modal_window).html(telegram);
    return $modal_window.modal();
  });
  return $modal_submit.on('click', function() {
    var created_at, ipv6;
    if ($modal_submit.data('action') === 'retransmit') {
      ipv6 = $('.modal-body .ipv6').text();
      created_at = $('.modal-body .created_at').data('created_at');
      $modal_submit.text('Working...').attr('disabled', 'disabled');
      return $.post('/xhr/retransmit', {
        'ipv6': ipv6,
        'created_at': created_at
      }, function(data) {
        if (data.result === 'success') {
          $modal_window.modal('hide');
        } else {
          console.error('failed.');
          $modal_window.modal('hide');
        }
        return $modal_submit.text(submit_text).attr('disabled', false);
      });
    }
  });
};
t.bind_subscribe_buttons = function() {
  var $subscribe_button;
  $subscribe_button = $('.subscribe');
  $subscribe_button.each(function(i, button) {
    var $button, ipv6, original_text;
    $button = $(button);
    ipv6 = $button.val();
    if ($button.attr('name') === 'subscribe') {
      original_text = $button.text();
      $button.text('Checking...').attr('disabled', 'disabled');
      return $.get('/xhr/check_status', {
        'ipv6': ipv6
      }, function(data) {
        var $dropdown;
        if (data.result === 'pong') {
          return $button.text(original_text).attr('disabled', false);
        } else {
          $button.text('Disabled');
          $dropdown = $button.parents('.buttonblock').find('.dropdown-toggle');
          return $dropdown.attr('disabled', 'disabled');
        }
      });
    }
  });
  return $subscribe_button.on('click', function(ev) {
    var $btn, ipv6, original_text, what;
    $btn = $(ev.target);
    ipv6 = $btn.val();
    what = $btn.attr('name');
    original_text = $btn.text();
    $btn.text('Working...').attr('disabled', 'disabled');
    $.post('/xhr/subscribe', {
      'what': what,
      'ipv6': ipv6
    }, function(data) {
      if (data.result === 'success') {
        if (what === 'subscribe') {
          $btn.removeClass('btn-default').addClass('btn-success');
          $btn.attr('name', 'unsubscribe');
          $btn.text('Subscribed');
        } else {
          $btn.removeClass('btn-success').addClass('btn-default');
          $btn.attr('name', 'subscribe');
          $btn.text('Subscribe');
        }
      } else {
        $btn.text(original_text);
      }
      return $btn.attr('disabled', false);
    });
    return false;
  });
};
t.run_timeline_xhr = true;

t.timeline_xhr = function() {
  var $timeline, xhr_url;
  $timeline = $('.timeline');
  xhr_url = $timeline.data('xhr-url');
  t.timeline_newest = $('li:first .created_at', $timeline).data('created_at');
  if (xhr_url) {
    if (xhr_url.indexOf('?') > -1) {
      xhr_url += '&since=' + t.timeline_newest;
    } else {
      xhr_url += '?since=' + t.timeline_newest;
    }
    if (window.location.href.indexOf('/fc') > -1) {
      t.run_timeline_xhr = false;
    }
    if (t.run_timeline_xhr) {
      t.run_timeline_xhr = false;
      return $.get(xhr_url, function(data) {
        if (data.length > 1) {
          $timeline.prepend(data);
        }
        return t.run_timeline_xhr = true;
      });
    }
  }
};

t.timeline_poller = function() {
  return setInterval(function() {
    return t.timeline_xhr();
  }, 2000);
};
t.char_counter = function() {
  var $charcounter, $telegram, $transmit;
  $telegram = $('#telegram');
  $transmit = $('#transmit');
  $charcounter = $('.charcounter');
  return $telegram.on('keyup', function() {
    var available_chars, remaining_chars, str_len;
    available_chars = 256;
    str_len = $telegram.val().length;
    remaining_chars = available_chars - str_len;
    $charcounter.text(remaining_chars);
    if (remaining_chars < 0) {
      $charcounter.addClass('warning');
      return $transmit.attr('disabled', 'disabled');
    } else {
      $charcounter.removeClass('warning');
      return $transmit.attr('disabled', false);
    }
  });
};
t.run_xhr = true;

t.xhr_step = 10;

t.xhr_load = function() {
  var $xhr, xhr_url;
  $xhr = $('.xhr');
  xhr_url = $xhr.data('xhr-url');
  if (xhr_url) {
    if (xhr_url.indexOf('?') > -1) {
      xhr_url += '&step=' + t.xhr_step;
    } else {
      xhr_url += '?step=' + t.xhr_step;
    }
    if (t.run_xhr) {
      t.run_xhr = false;
      return $.get(xhr_url, function(data) {
        if (data.length > 1) {
          $xhr.append(data);
          t.xhr_step = t.xhr_step + 10;
          return t.run_xhr = true;
        } else {
          return t.run_xhr = false;
        }
      });
    }
  }
};

t.scroll_action = function() {
  var bottom_distance, d_height, scroll_to, w_height;
  d_height = $(document).height();
  w_height = $(window).height();
  scroll_to = $(window).scrollTop();
  bottom_distance = d_height - w_height - scroll_to;
  if (bottom_distance < 100) {
    return t.xhr_load();
  }
};

t.xhr = function() {
  return setInterval(function() {
    return t.scroll_action();
  }, 100);
};
